const tseslint = require("typescript-eslint");

module.exports = tseslint.config(
  tseslint.configs.eslintRecommended,
  tseslint.configs.strictTypeChecked,

  {
    name: "ybiquitous/typescript",
    rules: {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "off",
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/ban-tslint-comment": "off",
      "@typescript-eslint/class-literal-property-style": "off",
      "class-methods-use-this": "off",
      "@typescript-eslint/class-methods-use-this": "warn", // eslint-disable-line sort-keys
      "@typescript-eslint/consistent-generic-constructors": "warn",
      "@typescript-eslint/consistent-indexed-object-style": "warn",
      "consistent-return": "off",
      "@typescript-eslint/consistent-return": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/consistent-type-assertions": "off",
      "@typescript-eslint/consistent-type-definitions": "off",
      "@typescript-eslint/consistent-type-exports": "warn",
      "@typescript-eslint/consistent-type-imports": "warn",
      "default-param-last": "off",
      "@typescript-eslint/default-param-last": "error", // eslint-disable-line sort-keys
      "dot-notation": "off",
      "@typescript-eslint/dot-notation": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/explicit-function-return-type": ["error", { allowExpressions: true }],
      "@typescript-eslint/explicit-member-accessibility": ["error", { accessibility: "no-public" }],
      "@typescript-eslint/explicit-module-boundary-types": "warn",
      "@typescript-eslint/init-declarations": "off",
      "@typescript-eslint/key-spacing": "off",
      "max-params": "off",
      "@typescript-eslint/max-params": "warn", // eslint-disable-line sort-keys
      "@typescript-eslint/member-ordering": "off",
      "@typescript-eslint/method-signature-style": "error",
      "@typescript-eslint/naming-convention": "off",
      "@typescript-eslint/no-array-delete": "error",
      "@typescript-eslint/no-base-to-string": "error",
      "@typescript-eslint/no-confusing-non-null-assertion": "error",
      "@typescript-eslint/no-confusing-void-expression": [
        "error",
        { ignoreArrowShorthand: true, ignoreVoidOperator: true },
      ],
      "@typescript-eslint/no-deprecated": "error",
      "no-dupe-class-members": "off",
      "@typescript-eslint/no-dupe-class-members": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/no-duplicate-enum-values": "error",
      "@typescript-eslint/no-duplicate-type-constituents": "error",
      "@typescript-eslint/no-dynamic-delete": "warn",
      "no-empty-function": "off",
      "@typescript-eslint/no-empty-function": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/no-extra-non-null-assertion": "error",
      "@typescript-eslint/no-extraneous-class": "error",
      "@typescript-eslint/no-floating-promises": "off",
      "@typescript-eslint/no-implied-eval": "error",
      "@typescript-eslint/no-import-type-side-effects": "error",
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-invalid-this": "off",
      "@typescript-eslint/no-invalid-void-type": "error",
      "no-loop-func": "off",
      "@typescript-eslint/no-loop-func": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/no-magic-numbers": "off",
      "@typescript-eslint/no-meaningless-void-operator": "error",
      "@typescript-eslint/no-misused-spread": "error",
      "@typescript-eslint/no-mixed-enums": "error",
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
      "@typescript-eslint/no-non-null-assertion": "error",
      "no-redeclare": "off",
      "@typescript-eslint/no-redeclare": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/no-redundant-type-constituents": "warn",
      "@typescript-eslint/no-require-imports": "error",
      "no-restricted-imports": "off",
      "@typescript-eslint/no-restricted-imports": "off", // eslint-disable-line sort-keys
      "@typescript-eslint/no-restricted-types": "off",
      "no-shadow": "off",
      "@typescript-eslint/no-shadow": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
      "@typescript-eslint/no-unnecessary-condition": "error",
      "@typescript-eslint/no-unnecessary-parameter-property-assignment": "error",
      "@typescript-eslint/no-unnecessary-qualifier": "warn",
      "@typescript-eslint/no-unnecessary-template-expression": "error",
      "@typescript-eslint/no-unnecessary-type-arguments": "error",
      "@typescript-eslint/no-unnecessary-type-constraint": "error",
      "@typescript-eslint/no-unnecessary-type-parameters": "error",
      "@typescript-eslint/no-unsafe-argument": "error",
      "@typescript-eslint/no-unsafe-assignment": "error",
      "@typescript-eslint/no-unsafe-call": "error",
      "@typescript-eslint/no-unsafe-declaration-merging": "error",
      "@typescript-eslint/no-unsafe-enum-comparison": "error",
      "@typescript-eslint/no-unsafe-member-access": "error",
      "@typescript-eslint/no-unsafe-return": "error",
      "@typescript-eslint/no-unsafe-type-assertion": "warn",
      "@typescript-eslint/no-unsafe-unary-minus": "error",
      "no-unused-expressions": "off",
      "@typescript-eslint/no-unused-expressions": "error", // eslint-disable-line sort-keys
      "no-use-before-define": "off",
      "@typescript-eslint/no-use-before-define": "off", // eslint-disable-line sort-keys
      "no-useless-constructor": "off",
      "@typescript-eslint/no-useless-constructor": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/no-useless-empty-export": "error",
      "@typescript-eslint/non-nullable-type-assertion-style": "warn",
      "no-throw-literal": "off",
      "@typescript-eslint/only-throw-error": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/padding-line-between-statements": "off",
      "@typescript-eslint/parameter-properties": "warn",
      "@typescript-eslint/prefer-as-const": "error",
      "prefer-destructuring": "off",
      "@typescript-eslint/prefer-destructuring": "warn", // eslint-disable-line sort-keys
      "@typescript-eslint/prefer-enum-initializers": "error",
      "@typescript-eslint/prefer-find": "error",
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-includes": "warn",
      "@typescript-eslint/prefer-literal-enum-member": "error",
      "@typescript-eslint/prefer-namespace-keyword": "warn",
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-optional-chain": "warn",
      "prefer-promise-reject-errors": "off",
      "@typescript-eslint/prefer-promise-reject-errors": "error", // eslint-disable-line sort-keys
      "@typescript-eslint/prefer-readonly": "warn",
      "@typescript-eslint/prefer-readonly-parameter-types": "warn",
      "@typescript-eslint/prefer-reduce-type-parameter": "warn",
      "@typescript-eslint/prefer-regexp-exec": "error", // See also `regexp/prefer-regexp-exec`
      "@typescript-eslint/prefer-return-this-type": "error",
      "@typescript-eslint/prefer-string-starts-ends-with": "warn",
      "@typescript-eslint/promise-function-async": "warn",
      "@typescript-eslint/related-getter-setter-pairs": "warn",
      "@typescript-eslint/require-array-sort-compare": "warn",
      "@typescript-eslint/restrict-plus-operands": "error",
      "@typescript-eslint/restrict-template-expressions": "warn",
      "@typescript-eslint/return-await": "error",
      "@typescript-eslint/strict-boolean-expressions": "error",
      "@typescript-eslint/switch-exhaustiveness-check": "warn",
      "@typescript-eslint/typedef": "off",
      "@typescript-eslint/unified-signatures": "error",
      "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
    },
  },
);
